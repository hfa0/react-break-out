{"version":3,"sources":["game/break-out.js","App.js","serviceWorker.js","index.js"],"names":["d3","require","Ball","_ref","x","y","ballRadius","react_default","a","createElement","cx","cy","r","Bar","_ref2","w","h","className","width","height","rx","ry","Node","_ref3","alive","index","style","display","createNodes","screenWidth","screenHeight","line","nodeColCount","arguments","length","undefined","nodes","parseInt","minPadding","rows","xPadding","dx","dy","i","push","nodeHeight","BreakOut","_this","Object","classCallCheck","this","_super","call","barWidth","barHeight","defaultState","xBall","yBall","xBar","yBar","alphaBall","vBall","vBar","state","objectSpread","isRunning","isGameOver","startGame","bind","assertThisInitialized","stopGame","resetGame","moveBar","_this$state","setState","nodeCount","_this2","d","_this3","timer","gameLoop","stop","e","preventDefault","_this$state2","key","keyCode","dxBar","parseFloat","document","addEventListener","removeEventListener","_step","isColliding","_this$state3","_iterator","_createForOfIteratorHelper","s","n","done","node","value","b","err","f","_this$state4","flip","alpha","Math","PI","random","round","bounceSucceed","gameOver","findCollidingNodes","filter","dyBall","sin","dxBall","cos","_this4","map","break_out_Node","break_out_Ball","break_out_Bar","onClick","type","onChange","evt","setNodes","target","setBarWidth","Number","Component","App","game_break_out","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"itDAEA,IAAMA,EAAKC,EAAQ,IAEbC,EAAO,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,EAAGC,EAANF,EAAME,EAAGC,EAATH,EAASG,WAAT,OACXC,EAAAC,EAAAC,cAAA,UAAQC,GAAIN,EAAGO,GAAIN,EAAGO,EAAGN,KAGrBO,EAAM,SAAAC,GAAA,IAAGV,EAAHU,EAAGV,EAAGC,EAANS,EAAMT,EAAGU,EAATD,EAASC,EAAGC,EAAZF,EAAYE,EAAZ,OACVT,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,MAAMb,EAAGA,EAAGC,EAAGA,EAAGa,MAAOH,EAAGI,OAAQH,EAAGI,GAAG,IAAIC,GAAG,OAG7DC,EAAO,SAAAC,GAAA,IAAGnB,EAAHmB,EAAGnB,EAAGC,EAANkB,EAAMlB,EAAGU,EAATQ,EAASR,EAAGC,EAAZO,EAAYP,EAAGQ,EAAfD,EAAeC,MAAfD,EAAsBE,MAAtB,OACXlB,EAAAC,EAAAC,cAAA,KAAGiB,MAAO,CAAEC,QAASH,EAAQ,QAAU,SACrCjB,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,OAAOb,EAAGA,EAAGC,EAAGA,EAAGa,MAAOH,EAAGI,OAAQH,EAAGI,GAAG,IAAIC,GAAG,QAIlEO,EAAc,SAACC,EAAaC,EAAcC,GAiB5C,IAjBwE,IAAtBC,EAAsBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC7DG,EAAQ,GAGRhC,EAAIiC,UAAUR,EAAcS,GAAkBN,GAC9CO,EAAOF,UAAUP,EAAeC,EAAOO,GAF1B,IAGbvB,EAAQ,GAAJX,EAKJoC,GAAYX,EAAczB,EAAI4B,GAAgB,EAG9CS,EAAKD,EAAgB,GAAJpC,EAAU,EAC3BsC,GAHYZ,EAAeC,EATd,GASqBQ,GAAqB,EAKlDI,EAAI,EAAGA,EAAIX,EAAeO,EAAMI,IACnCA,EAAIX,IAAiB,GAAW,IAANW,IAC5BF,EAAKD,EAAgB,GAAJpC,EAAU,EAC3BsC,GAjBa,IAmBfN,EAAMQ,KAAK,CAAExC,EAAGqC,EAAIpC,EAAGqC,EAAI3B,EAAGA,EAAGC,EAf3B6B,KAeiCrB,OAAO,IAC9CiB,GAAMrC,EAGR,OAAOgC,GAqPMU,0CA3Nb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAI,EAAAC,KAAAF,OArBFrB,YAAc,IAoBAkB,EAnBdjB,aAAe,IAmBDiB,EAlBdzC,WAAa,GAkBCyC,EAjBdM,SAAW,IAiBGN,EAhBdO,UAAY,GAgBEP,EAfdhB,KAAO,GAeOgB,EAbdQ,aAAe,CACbC,MAAOT,EAAKlB,YAAc,EAC1B4B,MAAOV,EAAKjB,aAAeiB,EAAKzC,WAAayC,EAAKO,UAClDD,SAAUN,EAAKM,SACfK,KAAOX,EAAKlB,YAAc,EAAMkB,EAAKM,SAAW,EAChDM,KAAMZ,EAAKjB,aAAeiB,EAAKO,UAC/BlB,MAAOR,EAAYmB,EAAKlB,YAAakB,EAAKjB,aAAciB,EAAKhB,MAC7D6B,UAAW,EACXC,MAAO,EACPC,KAAM,GACN9B,aAAc,IAKde,EAAKgB,MAALf,OAAAgB,EAAA,EAAAhB,CAAA,CACEiB,WAAW,EACXC,YAAY,GACTnB,EAAKQ,cAEVR,EAAKoB,UAAYpB,EAAKoB,UAAUC,KAAfpB,OAAAqB,EAAA,EAAArB,CAAAD,IACjBA,EAAKuB,SAAWvB,EAAKuB,SAASF,KAAdpB,OAAAqB,EAAA,EAAArB,CAAAD,IAChBA,EAAKwB,UAAYxB,EAAKwB,UAAUH,KAAfpB,OAAAqB,EAAA,EAAArB,CAAAD,IACjBA,EAAKyB,QAAUzB,EAAKyB,QAAQJ,KAAbpB,OAAAqB,EAAA,EAAArB,CAAAD,IAVHA,0DAcZG,KAAKoB,WADK,IAAAG,EAEsCvB,KAAKa,MAA7CF,EAFEY,EAEFZ,MAAO7B,EAFLyC,EAEKzC,aAAcqB,EAFnBoB,EAEmBpB,SAAUS,EAF7BW,EAE6BX,KACjCJ,EAAQR,KAAKrB,YAAc,EAAMqB,KAAKa,MAAMV,SAAW,EAC7DH,KAAKK,aAAanB,MAAQR,EAAYsB,KAAKrB,YAAaqB,KAAKpB,aAAcoB,KAAKnB,KAAMC,GACtFkB,KAAKwB,SAAL1B,OAAAgB,EAAA,EAAAhB,CAAA,GAAmBE,KAAKK,aAAxB,CAAsCG,OAAMI,OAAMD,QAAO7B,eAAcqB,WAAUa,YAAY,sCAGtFS,GAAW,IAAAC,EAAA1B,KAClBA,KAAKwB,SAAL1B,OAAAgB,EAAA,EAAAhB,CAAA,GAAmBE,KAAKa,MAAxB,CAA+B/B,aAAc2C,IAAa,WACxDC,EAAKL,kDAIGrD,GACV,IACM2D,EADW3B,KAAKa,MAAMV,SACPnC,EACrBgC,KAAKwB,SAAL1B,OAAAgB,EAAA,EAAAhB,CAAA,GAAmBE,KAAKa,MAAxB,CAA+BV,SAAUnC,EAAOwC,KAAMR,KAAKa,MAAML,KAAOmB,EAAI,yCAIlE,IAAAC,EAAA5B,KACNA,KAAKa,MAAME,YACff,KAAK6B,MAAQ/E,EAAG+E,MAAM,kBAAMD,EAAKE,aACjC9B,KAAK8B,WACL9B,KAAKwB,SAAS,CAAET,WAAW,wCAItBf,KAAK6B,QACV7B,KAAK6B,MAAME,OACX/B,KAAKwB,SAAS,CAAET,WAAW,qCAGrBiB,GAEN,GADAA,EAAEC,iBACGjC,KAAKa,MAAME,UAAhB,CAFS,IAAAmB,EAGmBlC,KAAKa,MAA3BL,EAHG0B,EAGH1B,KAAMI,EAHHsB,EAGGtB,KAAMN,EAHT4B,EAGS5B,MAEd6B,EAAMH,EAAEI,QACRC,EAAQ,EAEA,KAARF,IAAYE,EAAQzB,GACZ,KAARuB,IAAYE,GAASzB,GAEpBJ,EAAO6B,EAAS,GAAM7B,EAAO8B,WAAWtC,KAAKa,MAAMV,UAAYkC,EAASrC,KAAKrB,aAKlFqB,KAAKwB,SAAS,CACZhB,KAAMA,EAAO6B,EACb/B,MAAQN,KAAKa,MAAME,UAA4BT,EAAhBA,EAAQ+B,iDAKzCE,SAASC,iBAAiB,UAAWxC,KAAKsB,wDAI1CtB,KAAKoB,WACLmB,SAASE,oBAAoB,UAAWzC,KAAKsB,+CAGjChB,EAAOE,GAEnB,OADSF,GAASE,GAAQF,GAASE,EAAOR,KAAKa,MAAMV,4CAKrDH,KAAKoB,WACLpB,KAAKwB,SAAS,CACZR,YAAY,iDAKd,IADmB0B,EACfC,GAAc,EADCC,EAEW5C,KAAKa,MAA7B3B,EAFa0D,EAEb1D,MAAOoB,EAFMsC,EAENtC,MAAOC,EAFDqC,EAECrC,MAFDsC,EAAAC,EAIF5D,GAJE,IAInB,IAAA2D,EAAAE,MAAAL,EAAAG,EAAAG,KAAAC,MAAwB,KAAfC,EAAeR,EAAAS,MACtB,GAAID,EAAK5E,MAAO,CACd,IAAIhB,EAAKgD,GAAS4C,EAAKhG,GAAKoD,GAAS4C,EAAKhG,EAAIgG,EAAKrF,EAC/CuF,EAAK7C,EAAQP,KAAK5C,YAAc8F,EAAK/F,GAAKoD,EAAQP,KAAK5C,YAAc8F,EAAK/F,EAAI+F,EAAKpF,EAEvF,GADA6E,EAAcrF,GAAK8F,EACF,CAEfF,EAAK5E,OAAQ,EAEb,OAGJmB,GAhBiB,MAAA4D,GAAAR,EAAAb,EAAAqB,GAAA,QAAAR,EAAAS,IAsBnB,OAJAtD,KAAKwB,SAAS,CACZtC,MAAOA,IAGFyD,qCAIE,IAAAY,EAEsCvD,KAAKa,MAA9CP,EAFGiD,EAEHjD,MAAOK,EAFJ4C,EAEI5C,MAAOJ,EAFXgD,EAEWhD,MAAOG,EAFlB6C,EAEkB7C,UAAWF,EAF7B+C,EAE6B/C,KAElCgD,EAAO,SAACC,GAAD,OAAYA,EAAQC,KAAKC,GAAK,GAEzC,GAAkB,IAAdjD,EAAiB,CAEnB,IAAIhD,EAAIgG,KAAKE,UAAa,EAAIF,KAAKC,GAAK,GAAO,EAAID,KAAKC,GAAK,GAAO,EAAID,KAAKC,GAAK,EAClFjD,EAA0C,IAA9BgD,KAAKG,MAAMH,KAAKE,UAAkBlG,EAAIgG,KAAKC,GAAKjG,OAClD4C,EAAQN,KAAK5C,WAAc4C,KAAKrB,YAE1C+B,EAAY8C,EAAK9C,GACRJ,EAAQN,KAAK5C,aAEtBsD,EAAY8C,EAAK9C,IAQnB,GALIH,EAAQP,KAAK5C,aAEfsD,EAAY8C,EAAK9C,IAGdH,EAAQP,KAAKpB,aAAeoB,KAAK5C,WAAa4C,KAAKI,UAAY,CAElE,IAAIJ,KAAK8D,cAAcxD,EAAOE,GAM5B,OAAOR,KAAK+D,WAJZrD,EAAY8C,EAAK9C,GAQrB,GAAIH,EAAQP,KAAK5C,YAAc4C,KAAKpB,aAAeoB,KAAKnB,OAC9CmB,KAAKgE,uBAGXtD,EAAY8C,EAAK9C,GAEE,IADFV,KAAKa,MAAM3B,MAAM+E,OAAO,SAACjB,GAAD,OAAOA,EAAE1E,QAAOU,SACnC,OAAOgB,KAAK+D,WAKtC,IAAIG,EAASR,KAAKG,MAAMH,KAAKS,IAAIzD,GAAY,GAAKC,EAC9CyD,EAASV,KAAKG,MAAMH,KAAKW,IAAI3D,GAAY,GAAKC,EAElDX,KAAKwB,SAAS,CACZjB,MAAOA,EAAQ2D,EACf5D,MAAOA,EAAQ8D,EACf1D,UAAWA,qCAIN,IAAA4D,EAAAtE,KAEP,OAEE3C,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,QACbV,EAAAC,EAAAC,cAAA,WACGyC,KAAKa,MAAMG,WACV3D,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WAAWC,MAAOgC,KAAKrB,YAAaV,OAAQ+B,KAAKpB,cAAcvB,EAAAC,EAAAC,cAAA,QAAMQ,UAAU,cAAcb,EAAG8C,KAAKrB,YAAc,EAAGxB,EAAG6C,KAAKpB,aAAe,GAA9E,cAE5EvB,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,SAASC,MAAOgC,KAAKrB,YAAaV,OAAQ+B,KAAKpB,cAC3DoB,KAAKa,MAAM3B,MAAMqF,IAAI,SAAUrB,EAAM3E,GAEpC,OAAOlB,EAAAC,EAAAC,cAACiH,EAAD,CAAMrC,IAAK5D,EAChBA,MAAOA,EACPD,MAAO4E,EAAK5E,MACZpB,EAAGgG,EAAKhG,EACRC,EAAG+F,EAAK/F,EACRU,EAAGqF,EAAKrF,EACRC,EAAGoF,EAAKpF,MAEZT,EAAAC,EAAAC,cAACkH,EAAD,CAAMvH,EAAG8C,KAAKa,MAAMP,MAClBnD,EAAG6C,KAAKa,MAAMN,MACdnD,WAAY4C,KAAK5C,aACnBC,EAAAC,EAAAC,cAACmH,EAAD,CAAKxH,EAAG8C,KAAKa,MAAML,KACjBrD,EAAG6C,KAAKa,MAAMJ,KACd5C,EAAGmC,KAAKa,MAAMV,SACdrC,EAAGkC,KAAKI,cAIlB/C,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,WACbV,EAAAC,EAAAC,cAAA,UAAQoH,QAAS3E,KAAKiB,WAAtB,cACA5D,EAAAC,EAAAC,cAAA,UAAQoH,QAAS3E,KAAKoB,UAAtB,aACA/D,EAAAC,EAAAC,cAAA,UAAQoH,QAAS3E,KAAKqB,WAAtB,gBAEArB,KAAKa,MAAME,WAAa1D,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,iBACvCV,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,uBAAf,IAAsCV,EAAAC,EAAAC,cAAA,2BAAtC,KAA+DF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASzB,MAAOnD,KAAKa,MAAM/B,aAAc+F,SAAU,SAACC,GAAD,OAASR,EAAKS,SAASD,EAAIE,OAAO7B,WAChK9F,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,uBAAf,IAAsCV,EAAAC,EAAAC,cAAA,4BAAtC,KAAgEF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASzB,MAAOnD,KAAKa,MAAMF,MAAOkE,SAAU,SAACC,GAAD,OAASR,EAAK9C,SAAL1B,OAAAgB,EAAA,EAAAhB,CAAA,GAAmBwE,EAAKzD,MAAxB,CAA+BF,MAAOmE,EAAIE,OAAO7B,aAClL9F,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,uBAAf,IAAsCV,EAAAC,EAAAC,cAAA,wBAAtC,KAA4DF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASzB,MAAOnD,KAAKa,MAAMV,SAAU0E,SAAU,SAACC,GAAD,OAASR,EAAKW,YAAYH,EAAIE,OAAO7B,WAC5J9F,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,uBAAf,IAAsCV,EAAAC,EAAAC,cAAA,2BAAtC,KAA+DF,EAAAC,EAAAC,cAAA,SAAOqH,KAAK,SAASzB,MAAOnD,KAAKa,MAAMD,KAAMiE,SAAU,SAACC,GAAD,OAASR,EAAK9C,SAAL1B,OAAAgB,EAAA,EAAAhB,CAAA,GAAmBwE,EAAKzD,MAAxB,CAA+BD,KAAMsE,OAAOJ,EAAIE,OAAO7B,uBAzOzKgC,idChCRC,+JATX,OACE/H,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,OACXV,EAAAC,EAAAC,cAAC8H,EAAD,MACAhI,EAAAC,EAAAC,cAAA,OAAKQ,UAAU,eAAf,+EALQoH,aCKEG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOvI,EAAAC,EAAAC,cAACsI,EAAD,MAAStD,SAASuD,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.dd121b6c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './break-out.css';\nconst d3 = require(\"d3\");\n\nconst Ball = ({ x, y, ballRadius }) => (\n  <circle cx={x} cy={y} r={ballRadius} />\n);\n\nconst Bar = ({ x, y, w, h }) => (\n  <rect className=\"bar\" x={x} y={y} width={w} height={h} rx=\"3\" ry=\"3\" />\n);\n\nconst Node = ({ x, y, w, h, alive, index }) => (\n  <g style={{ display: alive ? 'block' : 'none' }}>\n    <rect className=\"node\" x={x} y={y} width={w} height={h} rx=\"3\" ry=\"3\" />\n  </g>\n);\n\nvar createNodes = (screenWidth, screenHeight, line, nodeColCount = 10) => {\n  var nodes = [];\n  var minPadding = 2;\n  var nodeHeight = 15;\n  var x = parseInt((screenWidth - minPadding * 2) / nodeColCount)\n  var rows = parseInt((screenHeight * line - minPadding * 2) / nodeHeight)\n  var w = x * 0.9;\n  var h = nodeHeight * 0.9;\n  // var px = x * 0.1;\n  // var py = nodeHeight * 0.1;\n\n  var xPadding = (screenWidth - x * nodeColCount) / 2\n  var yPadding = (screenHeight * line - rows * nodeHeight) / 2\n\n  var dx = xPadding + (x * 0.1 / 2);\n  var dy = yPadding;\n\n  for (var i = 0; i < nodeColCount * rows; i++) {\n    if (i % nodeColCount === 0 && i !== 0) {\n      dx = xPadding + (x * 0.1 / 2)\n      dy += nodeHeight\n    }\n    nodes.push({ x: dx, y: dy, w: w, h: h, alive: true });\n    dx += x\n  }\n  //console.log(nodes);\n  return nodes\n}\n\n\nclass BreakOut extends Component {\n\n  screenWidth = 800;\n  screenHeight = 400;\n  ballRadius = 10;\n  barWidth = 150;\n  barHeight = 10;\n  line = 0.5;\n\n  defaultState = {\n    xBall: this.screenWidth / 2,\n    yBall: this.screenHeight - this.ballRadius - this.barHeight,\n    barWidth: this.barWidth,\n    xBar: (this.screenWidth / 2) - (this.barWidth / 2),\n    yBar: this.screenHeight - this.barHeight,\n    nodes: createNodes(this.screenWidth, this.screenHeight, this.line),\n    alphaBall: 0,\n    vBall: 2,\n    vBar: 15,\n    nodeColCount: 10,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      isRunning: false,\n      isGameOver: false,\n      ...this.defaultState\n    }\n    this.startGame = this.startGame.bind(this);\n    this.stopGame = this.stopGame.bind(this);\n    this.resetGame = this.resetGame.bind(this);\n    this.moveBar = this.moveBar.bind(this);\n  }\n\n  resetGame() {\n    this.stopGame();\n    const { vBall, nodeColCount, barWidth, vBar } = this.state\n    const xBar = (this.screenWidth / 2) - (this.state.barWidth / 2)\n    this.defaultState.nodes = createNodes(this.screenWidth, this.screenHeight, this.line, nodeColCount)\n    this.setState({ ...this.defaultState, xBar, vBar, vBall, nodeColCount, barWidth, isGameOver: false });\n  }\n\n  setNodes(nodeCount) {\n    this.setState({ ...this.state, nodeColCount: nodeCount }, () => {\n      this.resetGame()\n    })\n  }\n\n  setBarWidth(width) {\n    const oldWidth = this.state.barWidth\n    const d = oldWidth - width\n    this.setState({ ...this.state, barWidth: width, xBar: this.state.xBar + d / 2 })\n\n  }\n\n  startGame() {\n    if (this.state.isRunning) return;\n    this.timer = d3.timer(() => this.gameLoop());\n    this.gameLoop();\n    this.setState({ isRunning: true })\n  }\n\n  stopGame() {\n    if (!this.timer) return;\n    this.timer.stop();\n    this.setState({ isRunning: false })\n  }\n\n  moveBar(e) {\n    e.preventDefault();\n    if (!this.state.isRunning) return;\n    let { xBar, vBar, xBall } = this.state\n\n    var key = e.keyCode;\n    var dxBar = 0;\n    //console.log(e.keyCode);\n    if (key === 39) dxBar = vBar;\n    if (key === 37) dxBar = -vBar;\n\n    if ((xBar + dxBar) < 0 || (xBar + parseFloat(this.state.barWidth) + dxBar) > this.screenWidth) {\n      // console.log('nope')\n      return\n    };\n\n    this.setState({\n      xBar: xBar + dxBar,\n      xBall: !this.state.isRunning ? xBall + dxBar : xBall\n    })\n  }\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.moveBar);\n  }\n\n  componentWillUnmount() {\n    this.stopGame();\n    document.removeEventListener('keydown', this.moveBar);\n  }\n\n  bounceSucceed(xBall, xBar) {\n    var a = (xBall >= xBar && xBall <= xBar + this.state.barWidth)\n    return a\n  }\n\n  gameOver() {\n    this.stopGame();\n    this.setState({\n      isGameOver: true\n    })\n  }\n\n  findCollidingNodes() {\n    var isColliding = false\n    let { nodes, xBall, yBall } = this.state\n    var i = 0;\n    for (let node of nodes) {\n      if (node.alive) {\n        var a = (xBall >= node.x && xBall <= node.x + node.w)\n        var b = (yBall + this.ballRadius >= node.y && yBall - this.ballRadius <= node.y + node.h)\n        isColliding = a && b\n        if (isColliding) {\n          //console.log({i:i, xBall:xBall, yBall:yBall, xn:node.x, yn:node.y, a:a, b:b});\n          node.alive = false\n          //this.stopGame()\n          break\n        }\n      }\n      i++\n    }\n    this.setState({\n      nodes: nodes,\n    })\n\n    return isColliding\n  }\n\n\n  gameLoop() {\n\n    let { xBall, vBall, yBall, alphaBall, xBar } = this.state;\n\n    var flip = (alpha) => (alpha - Math.PI / 2);\n\n    if (alphaBall === 0) {\n      //initial random angle\n      var r = Math.random() * ((5 * Math.PI / 16) - (1 * Math.PI / 4)) + (1 * Math.PI / 4);\n      alphaBall = Math.round(Math.random()) === 1 ? r : Math.PI - r;\n    } else if ((xBall + this.ballRadius) > this.screenWidth) {\n      //ball bounces on right side\n      alphaBall = flip(alphaBall)\n    } else if (xBall < this.ballRadius) {\n      //ball bounces on left side\n      alphaBall = flip(alphaBall)\n    }\n\n    if (yBall < this.ballRadius) {\n      //ball bounces on top\n      alphaBall = flip(alphaBall)\n    }\n\n    if ((yBall > this.screenHeight - this.ballRadius - this.barHeight)) {\n      //ball arrives at the minimum height\n      if (this.bounceSucceed(xBall, xBar)) {\n        //ball bounes on bar\n        alphaBall = flip(alphaBall)\n        // console.log(\"bounced\");\n      } else {\n        // console.log(\"game over\");\n        return this.gameOver()\n      }\n    }\n\n    if (yBall - this.ballRadius <= this.screenHeight * this.line) {\n      var a = this.findCollidingNodes()\n      //console.log(a);\n      if (a) {\n        alphaBall = flip(alphaBall)\n        var nodesAlive = this.state.nodes.filter((n) => n.alive).length;\n        if (nodesAlive === 0) return this.gameOver();\n      }\n    }\n\n\n    var dyBall = Math.round(Math.sin(alphaBall), 2) * vBall\n    var dxBall = Math.round(Math.cos(alphaBall), 2) * vBall\n\n    this.setState({\n      yBall: yBall - dyBall,\n      xBall: xBall - dxBall,\n      alphaBall: alphaBall,\n    })\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"game\">\n        <div>\n          {this.state.isGameOver ? (\n            <svg className=\"gameover\" width={this.screenWidth} height={this.screenHeight}><text className=\"text-center\" x={this.screenWidth / 2} y={this.screenHeight / 2}>Game Over</text></svg>\n          ) : (\n              <svg className=\"screen\" width={this.screenWidth} height={this.screenHeight}>\n                {this.state.nodes.map(function (node, index) {\n\n                  return <Node key={index}\n                    index={index}\n                    alive={node.alive}\n                    x={node.x}\n                    y={node.y}\n                    w={node.w}\n                    h={node.h} />;\n                })}\n                <Ball x={this.state.xBall}\n                  y={this.state.yBall}\n                  ballRadius={this.ballRadius} />\n                <Bar x={this.state.xBar}\n                  y={this.state.yBar}\n                  w={this.state.barWidth}\n                  h={this.barHeight} />\n              </svg>\n            )}\n        </div>\n        <div className=\"control\">\n          <button onClick={this.startGame}>start Game</button>\n          <button onClick={this.stopGame}>stop Game</button>\n          <button onClick={this.resetGame}>reset Game</button>\n        </div >\n        {!this.state.isRunning && <div className=\"control-input\">\n          <div className=\"control-input-entry\"> <div>node columns</div>  <input type=\"number\" value={this.state.nodeColCount} onChange={(evt) => this.setNodes(evt.target.value)} /></div>\n          <div className=\"control-input-entry\"> <div>ball velocity</div>  <input type=\"number\" value={this.state.vBall} onChange={(evt) => this.setState({ ...this.state, vBall: evt.target.value })} /></div>\n          <div className=\"control-input-entry\"> <div>bar width</div>  <input type=\"number\" value={this.state.barWidth} onChange={(evt) => this.setBarWidth(evt.target.value)} /></div>\n          <div className=\"control-input-entry\"> <div>bar velocity</div>  <input type=\"number\" value={this.state.vBar} onChange={(evt) => this.setState({ ...this.state, vBar: Number(evt.target.value) })} /></div>\n        </div>}\n      </div>\n\n    );\n  }\n}\n\nexport default BreakOut;\n","import React, { Component } from 'react';\nimport './App.css';\nimport BreakOut from './game/break-out.js';\n\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <BreakOut />\n          <div className=\"instruction\">start the game and use left and right arrow buttons to move the bar</div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}